apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'application'


// Configure the spring boot executable jar
mainClassName = 'com.package.Application'
archivesBaseName = "${rootProject.name}"

springBoot {
    buildInfo()
}
configurations.all {
    resolutionStrategy.eachDependency { details ->
        if (details.requested.group == 'org.springframework' && details.requested.name == 'spring-expression') {
            details.useVersion('5.3.39')
            details.because('CVE-2024-38808')
        } else if (details.requested.group == 'org.xerial.snappy' && details.requested.name == 'snappy-java') {
            details.useVersion('1.1.10.4')
            details.because('CVE-2023-34455, CVE-2023-43642, CVE-2023-34453, CVE-2023-34454')
        }
    }
}
dependencies {

    implementation project(':core')

    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.kafka:spring-kafka'

    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-joda'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8'
    implementation 'com.fasterxml.jackson.module:jackson-module-paranamer'
    implementation 'com.fasterxml.jackson.module:jackson-module-parameter-names'

    implementation "com.github.spullara.mustache.java:compiler:${dependencyVersions.mustacheLib}"
    implementation 'javax.servlet:javax.servlet-api'
    implementation 'org.liquibase:liquibase-core'
    implementation 'org.hibernate:hibernate-core'
    implementation 'org.apache.commons:commons-lang3:3.12.0'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.h2database:h2'
    testImplementation 'junit:junit'
}
